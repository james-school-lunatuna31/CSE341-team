{
  "swagger": "2.0",
  "info": {
    "title": "Library API (Group)",
    "description": "An application program interface to manage data between the front end and back end of the library application. This application was built for CSE341 by Austin Campbell and James Green.",
    "version": "1.0.0"
  },
  "host": "cse341-team-library.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "(Will be deprecated in the future of the project) Endpoint that contains all user, requires verification to access.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Creates a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Jeffery"
                },
                "lastName": {
                  "example": "Smith"
                },
                "userName": {
                  "example": "jsmith2015"
                },
                "role": {
                  "example": "User"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "350": {
            "description": "Missing required role to perform action"
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Receives a user by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Updates an existing user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Jeffery"
                },
                "lastName": {
                  "example": "Smith"
                },
                "userName": {
                  "example": "jsmith2015"
                },
                "role": {
                  "example": "Publisher"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "350": {
            "description": "Missing required role to perform action"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Deletes a user in the database by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/library/": {
      "get": {
        "tags": [
          "Library"
        ],
        "description": "Retrieves all books in the library.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Library"
        ],
        "description": "Adds a new book to the library, requires verification and will require publisher role. Verifies the ISBN first, then the body data.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "Moby Dick"
                },
                "author": {
                  "example": "Herman Melville"
                },
                "genre": {
                  "example": "Adventure fiction"
                },
                "published": {
                  "example": "2018"
                },
                "isbn": {
                  "example": "978-1-50-3280786"
                },
                "stock": {
                  "example": "2"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "350": {
            "description": "Missing required role to perform action"
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "413": {
            "description": "ISBN Failed a validation check, please verify ISBN is correct"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/library/{id}": {
      "get": {
        "tags": [
          "Library"
        ],
        "description": "Retrieves a single book in the library by the ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Library"
        ],
        "description": "Updates the content of a book in the library.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "Moby Dick"
                },
                "author": {
                  "example": "Herman Melville"
                },
                "genre": {
                  "example": "Adventure fiction"
                },
                "published": {
                  "example": "1851"
                },
                "isbn": {
                  "example": "978-1-50-3280786"
                },
                "stock": {
                  "example": "0"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Library"
        ],
        "description": "Deletes a book from the library by the ID number",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/library/checkout/{id}": {
      "put": {
        "tags": [
          "Library"
        ],
        "description": "Checks out one book from the inventory of the library and updates it in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book was successfully checked out"
          },
          "349": {
            "description": "Book was successfully checked out"
          },
          "350": {
            "description": "Missing required role to perform action."
          },
          "351": {
            "description": "The book is out of stock."
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/author/": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Retrieves all authors stored in the database, includes the books they have in the library.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "description": "Creates a new author, only useable by a admin after validation.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Herman"
                },
                "lastName": {
                  "example": "Melville"
                },
                "id": {
                  "example": "Books IDs from DB"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "350": {
            "description": "Missing required role to perform action"
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/author/{id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "description": "Retrieves a single author by their ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "description": "Updates an existing author, only useable by a admin after validation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Herman"
                },
                "lastName": {
                  "example": "Melville"
                },
                "id": {
                  "example": "ID #s to change"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "350": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "description": "Deletes an existing author, only useable by a admin after validation. Does not affect books.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "350": {
            "description": "Missing required role to perform action"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/membership/": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Retrieves all memberships actively stored in the database, includes the userId they are.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Membership"
        ],
        "description": "Creates a new membership for a user using the required fields.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Sarah"
                },
                "lastName": {
                  "example": "Fasciano"
                },
                "userId": {
                  "example": "none"
                },
                "membershipType": {
                  "example": "gold"
                },
                "memberSince": {
                  "example": "05/31/2024"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/membership/{id}": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Retrieves a single membership by the membership ID or the userId.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Membership"
        ],
        "description": "Updates the fields of a membership in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Sarah"
                },
                "lastName": {
                  "example": "Fasciano"
                },
                "userId": {
                  "example": "none"
                },
                "membershipType": {
                  "example": "platinum"
                },
                "memberSince": {
                  "example": "05/31/2024"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "412": {
            "description": "Data validation error, check required fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Membership"
        ],
        "description": "Deletes a membership from the database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "ID does not match IDs in the Database."
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}